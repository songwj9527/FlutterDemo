name: flutter_demo_app
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.12.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter

  # 国际化多国语言
  flutter_localizations:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.3

  # crypto库（MD5/AES/RSA等...加解密）: https://pub.dev/packages/crypto
  crypto: ^3.0.1

  # 硬件设备信息: https://pub.dev/packages/device_info
  device_info: ^2.0.2

  # 应用包信息（包名/版本等信息）: https://pub.dev/packages/package_info
  package_info: ^2.0.2

  #  # Flutter本地通知栏: https://pub.flutter-io.cn/packages/flutter_local_notifications
  #  flutter_local_notifications: ^1.4.4+3

  # Flutter权限插件: https://pub.dev/packages/permission_handler
  permission_handler: ^8.1.4+1

  # Flutter屏幕旋转插件: https://pub.dev/packages/orientation
  orientation: ^1.3.0

  # Flutter文件下载插件: https://pub.flutter-io.cn/packages/flutter_downloader
  flutter_downloader: ^1.6.1

  # 应用安装插件: https://pub.flutter-io.cn/packages/app_installer
  app_installer: ^1.0.0

  # Toast: https://pub.flutter-io.cn/packages/fluttertoast
  fluttertoast: ^8.0.7

  # Dart 常用工具类库 https://pub.dev/packages/common_utils
  # TimelineUtil : 时间轴.
  # TimerUtil : 倒计时，定时任务.
  # MoneyUtil : 精确转换，元转分，分转元，支持格式输出.
  # LogUtil : 简单封装打印日志.
  # DateUtil : 日期转换格式化输出.
  # RegexUtil : 正则验证手机号，身份证，邮箱等等.
  # NumUtil : 保留x位小数, 精确加、减、乘、除, 防止精度丢失.
  # ObjectUtil : 判断对象是否为空(String List Map),判断两个List是否相等.
  # EncryptUtil : 异或对称加/解密，md5加密，Base64加/解密.
  # TextUtil : 银行卡号每隔4位加空格，每隔3三位加逗号，隐藏手机号等等.
  # JsonUtil : 简单封装json字符串转对象.
  common_utils: ^2.0.2

  # Flutter 常用工具类库 https://pub.dev/packages/flustars
  #  1、SpUtil: 单例"同步"SharedPreferences工具类。支持get传入默认值，支持存储对象，支持存储对象数组。
  #  2、ScreenUtil: 屏幕适配，获取屏幕宽、高、密度，AppBar高，状态栏高度，屏幕方向.
  #  3、WidgetUtil: 监听Widget渲染状态，获取Widget宽高，在屏幕上的坐标，获取网络/本地图片尺寸.
  #  4、ImageUtil : 获取网络/本地图片尺寸.
  #  5、DirectoryUtil : 文件目录工具类.
  #  6、DioUtil : 单例Dio网络工具类(已迁移至此处DioUtil)。
  flustars: ^2.0.1
  # https://github.com/Sky24n/sp_util
  # sp_util分拆成单独的库，可以直接引用
  sp_util: ^2.0.3
  # 因为flustars自动导入shared_preferences，所以不需要单独导入shared_preferences插件
  #  # 应用内部本地存储文件 https://pub.dev/packages/shared_preferences
  #  shared_preferences: ^0.5.2

  # 浏览器启动URL https://pub.dev/packages/url_launcher
  url_launcher: ^6.0.9
  # WebView插件: 内部加载URL https://pub.dev/packages/flutter_webview_plugin
  flutter_webview_plugin: ^0.4.0
  #  # WebView插件: 内部加载URL
  #  webview_flutter: ^2.0.10
  # 展示html文本插件: https://pub.dev/packages/flutter_html
  flutter_html: ^2.1.0

  # 网络图片加载 https://pub.dev/packages/cached_network_image
  cached_network_image: ^3.1.0
  #  # 因为cached_network_image自动导入sqflite，所以不需要单独导入sqflite插件
  #  # 应用内部sqlite数据库 https://pub.dev/packages/sqflite
  #  sqflite: ^1.1.5
  #  # 因为cached_network_image自动导入path_provider，所以不需要单独导入path_provider插件
  #  # 文件相关：路径/存储等 https://pub.dev/packages/path_provider
  #  path_provider: ^1.1.0
  #  # 因为cached_network_image自动导入path_provider，所以不需要单独导入path_provider插件
  #  # 文件相关：路径/存储等 https://pub.dev/packages/path
  #  path: ^1.7.0

  # 提供以各种不同的文件格式加载、保存和操作图像的能力。该库不需要依赖于DART：IO，因此它可以用于服务器和Web应用程序。
  # https://pub.dev/packages/image
  image: ^3.0.2

  # 打开系统相册、系统相机拍照或录制视频 https://pub.dev/packages/image_picker
  image_picker: ^0.8.2
  # 保存图片到系统相册 https://pub.flutter-io.cn/packages/image_gallery_saver
  image_gallery_saver: ^1.6.9

  # 一个支持图像查看和手势缩放操作功能的图片库。 https://pub.dev/packages/zoomable_image
  zoomable_image: ^1.3.1

  # 图片预览：缩放/移动查看大图/gallery等 https://pub.dev/packages/photo_view
  photo_view: ^0.12.0

  # 图片剪切：https://pub.dev/packages/image_crop
  image_crop: ^0.4.0
  # 图片剪切：https://pub.dev/packages/extended_image
  extended_image: ^4.1.0

  # 下拉刷新/上拉加载 https://pub.dev/packages/flutter_easyrefresh
  flutter_easyrefresh: ^2.2.1
  # 上拉加载下拉刷新 package: https://pub.dev/packages/pull_to_refresh
  pull_to_refresh: ^2.0.0

  # 滑动siwiper：多种布局方式，无限轮播，Android和IOS双端适配 https://pub.dev/packages/flutter_swiper
  flutter_swiper: ^1.1.6

  # 滑动slider：https://pub.dev/packages/carousel_slider
  carousel_slider: ^4.0.0

  # event_bus event_bus https://pub.dev/packages/event_bus
  event_bus: ^2.0.0

  # rx响应式编程 rxdart https://pub.dev/packages/rxdart
  rxdart: ^0.27.1

  # 网络架构 https://github.com/flutterchina/dio
  dio: ^4.0.0
  # Dio HttpClientAdapter which implements Http/2.0 https://pub.dev/packages/dio_http2_adapter
  dio_http2_adapter: ^2.0.0
  # cookie manager for Dio https://pub.dev/packages/dio_cookie_manager
  dio_cookie_manager: ^2.0.0
  # Dio-http-cache 是 Flutter 的 http 缓存库，为 Dio 设计，就像 Android 中的 RxCache 一样。
  # Dio-http-cache 使用 sqflite 作为磁盘缓存，使用 Google/quiver-dart 的LRU算法 作为内存缓存策略。
  # https://pub.dev/packages/dio_http_cache
  dio_http_cache: ^0.3.0
  #  # A dio transformer especially for flutter, by which the json decoding will be in background with [compute] function.
  #  # https://pub.dev/packages/dio_flutter_transformer
  #  # dio_flutter_transformer 3.0.2 基于 dio ^3.0.0，无法兼容 dio: ^4.0.0
  #  dio_flutter_transformer: ^3.0.2

  # 微信sdk集成：https://pub.dev/packages/wechat_kit
  wechat_kit: ^2.3.1

  # 可自定义的缩进与展开的控件: 文本、子列表等
  # A Flutter widget that can be expanded or collapsed by the user.
  # https://pub.dev/packages/expandable
  expandable: ^5.0.1

  # 日期时间选择器：https://pub.dev/packages/flutter_datetime_picker
  flutter_datetime_picker: ^1.5.0
  # 日期时间选择器：https://pub.dev/packages/flutter_rounded_date_picker
  flutter_rounded_date_picker: ^2.0.2
  # 日期时间选择器：https://pub.dev/packages/syncfusion_flutter_datepicker
  syncfusion_flutter_datepicker: ^19.2.48

  # 城市选择器：https://pub.dev/packages/city_pickers
  city_pickers: ^1.0.1
  flutter_colorpicker: ^0.5.0

  # 城市选择器：https://pub.dev/packages/xyz_address_picker
  xyz_address_picker: ^1.0.1

  # lpinyin是一个汉字转拼音的Dart package: https://pub.dev/packages/lpinyin
  # ①准确、完善的字库
  # ②拼音转换速度快
  # ③支持多种拼音输出格式：带音标、不带音标、数字表示音标以及拼音首字母输出格式
  # ④支持常见多音字的识别，其中包括词组、成语、地名等
  # ⑤简繁体中文转换
  # ⑥支持添加用户自定义字典
  lpinyin: ^2.0.3

  # 图表组件库 package: https://pub.dev/packages/fl_chart
  fl_chart: ^0.36.3
  # 图表组件库 package: https://pub.dev/packages/syncfusion_flutter_charts
  syncfusion_flutter_charts: ^19.2.48

  # bugly异常日志统计 package: https://pub.flutter-io.cn/packages/flutter_bugly
  flutter_bugly: ^0.3.3

  # 瀑布流列表显示 package: https://pub.dev/packages/flutter_staggered_grid_view
  flutter_staggered_grid_view: ^0.4.0

#  # 音频播放器 package: https://pub.dev/packages/audioplayers
#  audioplayers: ^0.19.1
#  # 音频播放器 package: https://pub.dev/packages/chewie_audio
#  chewie_audio: ^1.2.0
#  # 视频播放器 package: https://pub.dev/packages/video_player
#  video_player: ^2.1.12
#  # 视频播放UI控件 https://pub.dev/packages/chewie
#  chewie: ^1.2.2

dev_dependencies:
  flutter_test:
    sdk: flutter

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # 切图/json/xml等资源
  assets:
    - assets/images/ic_launcher.png
    - assets/images/ic_launcher_new.png
    - assets/images/icon_account.png
    - assets/images/icon_password.png
    - assets/images/icon_close_eye.png
    - assets/images/icon_open_eye.png
    - assets/images/icon_more_up.png
    - assets/images/icon_more_down.png
    - assets/images/icon_default.png
    - assets/images/icon_no_data.png
    - assets/images/icon_checking.png
    - assets/images/icon_sale_all.jpg

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
